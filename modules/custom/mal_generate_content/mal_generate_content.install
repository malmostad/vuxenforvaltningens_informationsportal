<?php

/**
 * @file
 * Module install file. Contains default content generation.
 */

/**
 * Implements hook_enable().
 *
 * Invoked on a Feature module after that module is enabled.
 */
function mal_generate_content_enable() {
  mal_generate_content_add_taxonomy_terms('course_type_of_education',
    array(
      'Grundläggande vuxenutbildning',
      'Gymnasial vuxenutbildning, enstaka kurser',
      'Gymnasial yrkesutbildning',
      'Lärlingsutbildning',
    )
  );

  mal_generate_content_add_taxonomy_terms('course_form',
    array(
      'Klassrumsundervisning',
      'Distanskurs',
      'Flexkurs',
    )
  );

  mal_generate_content_add_taxonomy_terms('course_school',
    array(
      'Malmö borgarskola',
      'Malmö bygggymnasium',
      'Malmö södervärn',
      'Malmö universitetsholmen',
    )
  );

  mal_generate_content_add_taxonomy_terms('course_subject_areas',
    array(
      'Språk',
      'Naturvetenskap',
      'Mattematik',
    )
  );

  mal_generate_content_add_taxonomy_terms('course_orientation',
    array(
      'Fordon',
      'Försäljning, ekonomi, administration, service',
      'Hantverk, bygg-och verkstadsteknik',
      'Hotell och turism',
    )
  );

  mal_generate_content_add_taxonomy_terms('course_gymnasie_program',
    array(
      'Natur',
      'Samhälle',
      'Ekonomi',
    )
  );

  global $user;

  $school = new stdClass();
  $school->title = "A1 Test school";
  $school->type = "school";
  node_object_prepare($school);
  $school->language = LANGUAGE_NONE;
  $school->uid = $user->uid;
  $school->status = 1;

  $school->body[$school->language][] = array(
    'value' => 'Test body',
  );

  $school->field_school_address[$school->language][] = array(
    'value' => 'Test school address',
  );

  $school->field_school_email[$school->language][] = array(
    'value' => 'school@email.test',
  );

  $school->field_school_fax[$school->language][] = array(
    'value' => '777777',
  );

  $school->field_school_locality[$school->language][] = array(
    'value' => 'Malmo test',
  );

  $school->field_school_maps_link[$school->language][] = array(
    'value' => 'Test link',
  );

  $school->field_school_phone[$school->language][] = array(
    'value' => '380932312332',
  );

  $school->field_school_post_office[$school->language][] = array(
    'value' => 'Test post C3',
  );

  $school->field_school_postal_code[$school->language][] = array(
    'value' => '123 312',
  );

  $school->field_school_street_address[$school->language][] = array(
    'value' => 'Test school street address',
  );

  $school = node_submit($school);
  node_save($school);

  $node = new stdClass();
  $node->title = "Test course";
  $node->type = "course";
  node_object_prepare($node);
  $node->language = LANGUAGE_NONE;
  $node->uid = $user->uid;
  $node->status = 1;

  $node->field_course_date[$node->language][] = array(
    'value' => '1362524400',
    'value2' => '1396562400',
  );

  $node->field_course_school[$node->language][] = array(
    'target_id' => $school->nid,
  );

  $node->field_course_application_period[$node->language][] = array(
    'value' => '1360018800',
    'value2' => '1391554800',
  );

  $node->field_course_periods[$node->language][] = array(
    'value' => '300',
    'value2' => '44100',
    'tue' => 1,
    'mon' => 1,
    'wed' => 0,
    'thu' => 0,
    'fri' => 0,
    'sat' => 0,
    'sun' => 0,
  );

  $node = node_submit($node);
  node_save($node);
}

/**
 * Add missed terms to vocabulary.
 *
 * @param string $voc_name
 *   Vocabulary machine name.
 * @param array $terms
 *   Term names.
 */
function mal_generate_content_add_taxonomy_terms($voc_name, $terms) {
  $vocabulary = taxonomy_vocabulary_machine_name_load($voc_name);

  if (!$vocabulary) {
    $new_vocab = (object) array(
      'name' => str_replace('_', ' ', strtoupper($voc_name)),
      'machine_name' => $voc_name,
    );

    taxonomy_vocabulary_save($new_vocab);
    $vocabulary = taxonomy_vocabulary_machine_name_load($voc_name);
  }

  $options_source = taxonomy_get_tree($vocabulary->vid);
  $options = array();
  foreach ($options_source as $item) {
    $value = $item->name;
    $options[] = $value;
  }

  foreach (array_diff($terms, $options) as $name) {
    $term = new stdClass();
    $term->name = $name;
    $term->vid = $vocabulary->vid;
    taxonomy_term_save($term);
  }
}
