<?php

/**
 * @file
 * Profile installation tasks.
 */

/**
 * Implements hook_install().
 *
 * Perform actions to set up the site for this profile.
 */
function mal_install() {
  // Any themes without keys here will get numeric keys and so will be enabled,
  // but not placed into variables.
  $enable = array(
    'theme_default' => 'city_of_malmo',
    'admin_theme' => 'seven',
  );
  theme_enable($enable);

  // Create a default role for site administrators,
  // with all available permissions assigned.
  $admin_role = new stdClass();
  $admin_role->name = 'administrator';
  $admin_role->weight = 2;
  user_role_save($admin_role);
  user_role_grant_permissions($admin_role->rid, array_keys(module_invoke_all('permission')));
  // Set this as the administrator role.
  variable_set('user_admin_role', $admin_role->rid);

  // Assign user 1 the "administrator" role.
  db_insert('users_roles')
    ->fields(array('uid' => 1, 'rid' => $admin_role->rid))
    ->execute();

  foreach ($enable as $var => $theme) {
    if (!is_numeric($var)) {
      variable_set($var, $theme);
    }
  }

  // Disable the default Bartik theme.
  theme_disable(array('bartik'));

  // Ignore any rebuild messages.
  node_access_needs_rebuild(FALSE);
  // Ignore any other install messages.
  drupal_get_messages();
  variable_set('site_frontpage', 'front_page');
  variable_set('page_manager_node_view_disabled', 0);
  variable_set('panels_everywhere_site_template_enabled', 1);

  $strongarm = new stdClass();
  $strongarm->disabled = FALSE; /* Edit this to true to make a default strongarm disabled initially */
  $strongarm->api_version = 1;
  $strongarm->name = 'date_format_mal_short';
  $strongarm->value = 'Ymd';
  $export['date_format_mal_short'] = $strongarm;

  db_insert('date_formats')
    ->fields(array(
      'format' => 'Y-m-d',
      'type' => 'mal_short_course',
      'locked' => 0,
    ))
    ->execute();

  db_insert('date_format_type')
    ->fields(array(
      'type' => 'mal_short_course',
      'title' => 'Mal short course',
      'locked' => 0,
    ))
    ->execute();

  variable_set('date_format_mal_short_course', 'Y-m-d');

  db_insert('date_formats')
    ->fields(array(
      'format' => 'Y-m-d',
      'type' => 'mal_course_period',
      'locked' => 0,
    ))
    ->execute();

  db_insert('date_format_type')
    ->fields(array(
      'type' => 'mal_course_period',
      'title' => 'Mal course period',
      'locked' => 0,
    ))
    ->execute();

  variable_set('date_format_mal_course_period', 'Y-m-d');

  $image_name = 'oppet_hus3.jpg';
  $image_path = DRUPAL_ROOT . '/' . drupal_get_path('profile', 'mal') . '/files/' . $image_name;
  $image_data = file_get_contents($image_path);
  if ($file = file_save_data($image_data, 'public://' . $image_name, FILE_EXISTS_REPLACE)) {
    variable_set('page_main_layout_banner_image_fid', $file->fid);
  }

  menu_rebuild();

  $features = array(
    'config_permissions',
    'menu_footer_social',
    'page_main_layout',
  );
  features_revert($features);
  node_access_needs_rebuild(FALSE);

  // Add hash salt and database settings as long as function below is designed
  // for one-time usage and will skip this important settings.
  $settings = array(
    'databases' => array(
      'value' => $GLOBALS['databases'],
      'required' => TRUE,
    ),
    'drupal_hash_salt' => array(
      'value' => $GLOBALS['drupal_hash_salt'],
      'required' => TRUE,
    ),
    'cache_backends' => array(
      'value' => array(
        drupal_get_path('module', 'memcache') . '/memcache.inc',
        drupal_get_path('module', 'memcache') . '/varnish.cache.inc',
      ),
      'required' => TRUE,
    ),
    'cache_default_class' => array(
      'value' => 'MemCacheDrupal',
      'required' => TRUE,
    ),
    'cache_class_cache_form' => array(
      'value' => 'DrupalDatabaseCache',
      'required' => TRUE,
    ),
    'cache_class_cache_page' => array(
      'value' => 'VarnishCache',
      'required' => TRUE,
    ),
    'page_cache_invoke_hooks' => array(
      'value' => FALSE,
      'required' => TRUE,
    ),
  );
  drupal_rewrite_settings($settings);

  // Set datePicker to start with Monday.
  variable_set('date_first_day', 1);

  // Add canonical links to pages.
  $settings = variable_get('globalredirect_settings', array());
  $settings['canonical'] = TRUE;
  variable_set('globalredirect_settings', $settings);

  // Enable alias transliteration.
  variable_set('pathauto_transliterate', TRUE);
}
